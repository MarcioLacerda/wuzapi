name: Sync main from upstream

on:
  schedule:
    - cron: "0 */12 * * *"   # roda a cada 12 horas
  workflow_dispatch:          # permite rodar manualmente

permissions:
  contents: write
  actions: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout fork main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          persist-credentials: true

      - name: Add upstream
        run: |
          git remote add upstream https://github.com/asternic/wuzapi.git
          git fetch upstream

      - name: Fast-forward merge upstream/main → fork/main
        run: |
          git merge --ff-only upstream/main || echo "⚠️ Não foi possível fast-forward (sem problema se não houve mudanças)"

      - name: Sync tags from upstream
        run: |
          git fetch --tags upstream
          git push origin --tags
      
      - name: Push updated main
        run: git push origin main

      - name: Ensure jq is available
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update -y
            sudo apt-get install -y jq
          fi

      - name: List all workflows (REST)
        id: list
        env:
          GH_TOKEN: ${{ github.token }}   # << use o token automático
        run: |
          set -euo pipefail
          # Baixa e falha se HTTP status >= 400; grava status e corpo separados
          status=$(curl -sS -o workflows.json -w "%{http_code}" -f \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows" \
            || true)

          echo "HTTP status: ${status}"
          if [[ -z "${status:-}" || "$status" -ge 400 ]]; then
            echo "Falha ao listar workflows. Conteúdo recebido:"
            head -c 1000 workflows.json || true
            exit 1
          fi

          # Valida JSON antes de seguir
          jq . >/dev/null < workflows.json

          # Mostra um resumo
          jq '.workflows[] | {id: .id, name: .name, path: .path, state: .state}' workflows.json

      - name: Disable any non-allowlisted workflow
        env:
          GH_TOKEN: ${{ github.token }}   # << idem
          ALLOWED: ${{ steps.cfg.outputs.allowed }}
        run: |
          set -euo pipefail

          IFS=',' read -ra OK <<< "${ALLOWED:-}"
          allow_re='^('"$(printf '%s|' "${OK[@]}" | sed 's/|$//')"')$'
          if [[ "${#OK[@]}" -eq 0 ]]; then
            echo "ALLOWED vazio — nada será mantido ativo. (Edite o passo Define workflows allowlist)"
          fi

          # Itera com while para não quebrar em espaços/UTF-8
          jq -c '.workflows[]' workflows.json | while read -r row; do
            id=$(echo "$row"   | jq -r '.id')
            path=$(echo "$row" | jq -r '.path')    # .github/workflows/foo.yml
            state=$(echo "$row"| jq -r '.state')   # active / disabled_...
            file=$(basename "$path")

            if [[ "$file" =~ $allow_re ]]; then
              echo "✔ Mantendo ativo: $file"
              continue
            fi

            if [[ "$state" == "active" ]]; then
              echo "⛔ Desabilitando: $file (id=$id)"
              code=$(curl -sS -o /dev/null -w "%{http_code}" -X PUT \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer $GH_TOKEN" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                "https://api.github.com/repos/${{ github.repository }}/actions/workflows/$id/disable")
              echo "HTTP $code"
              if [[ "$code" -ge 400 ]]; then
                echo "Falha ao desabilitar $file"
                exit 1
              fi
            else
              echo "• Já desabilitado: $file (state=$state)"
            fi
          done
