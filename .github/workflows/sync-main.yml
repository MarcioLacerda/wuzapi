name: Sync main from upstream

on:
  schedule:
    - cron: "0 */12 * * *"   # roda a cada 12 horas
  workflow_dispatch:          # permite rodar manualmente

permissions:
  contents: write
  actions: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout fork main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          persist-credentials: true

      - name: Add upstream
        run: |
          git remote add upstream https://github.com/asternic/wuzapi.git
          git fetch upstream

      - name: Fast-forward merge upstream/main → fork/main
        run: |
          git merge --ff-only upstream/main || echo "⚠️ Não foi possível fast-forward (sem problema se não houve mudanças)"

      - name: Sync tags from upstream
        run: |
          git fetch --tags upstream
          git push origin --tags
      
      - name: Push updated main
        run: git push origin main

      - name: Ensure jq is available
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update -y
            sudo apt-get install -y jq
          fi

      - name: Define workflows allowlist
        id: cfg
        run: |
          # Liste aqui SOMENTE os workflows que devem ficar ativos no fork.
          # Use o nome do arquivo (basename), ex.: "sync-main.yml"
          echo "allowed=sync-main.yml" >> $GITHUB_OUTPUT

      - name: List all workflows (REST)
        id: list
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          curl -sL -H "Accept: application/vnd.github+json" \
               -H "Authorization: Bearer $GH_TOKEN" \
               -H "X-GitHub-Api-Version: 2022-11-28" \
               "https://api.github.com/repos/${{ github.repository }}/actions/workflows" \
               > workflows.json
          jq '.workflows[] | {id: .id, name: .name, path: .path, state: .state}' workflows.json

      - name: Disable any non-allowlisted workflow
        env:
          GH_TOKEN: ${{ github.token }}
          ALLOWED: ${{ steps.cfg.outputs.allowed }}
        run: |
          IFS=',' read -ra OK <<< "$ALLOWED"
          allow_re='^('"$(printf '%s|' "${OK[@]}" | sed 's/|$//')"')$'

          for row in $(jq -c '.workflows[]' workflows.json); do
            id=$(echo "$row"   | jq -r '.id')
            path=$(echo "$row" | jq -r '.path')   # ex: .github/workflows/build.yml
            state=$(echo "$row"| jq -r '.state')  # active / disabled_manually / ...
            file=$(basename "$path")

            if [[ "$file" =~ $allow_re ]]; then
              echo "✔ Mantendo ativo: $file"
              continue
            fi

            if [[ "$state" == "active" ]]; then
              echo "⛔ Desabilitando: $file (id=$id)"
              curl -sL -X PUT \
                   -H "Accept: application/vnd.github+json" \
                   -H "Authorization: Bearer $GH_TOKEN" \
                   -H "X-GitHub-Api-Version: 2022-11-28" \
                   "https://api.github.com/repos/${{ github.repository }}/actions/workflows/$id/disable" \
                   -o /dev/null -w "HTTP %{http_code}\n"
            else
              echo "• Já desabilitado: $file (state=$state)"
            fi
          done
